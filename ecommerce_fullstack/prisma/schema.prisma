// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int             @id @default(autoincrement())
  email     String          @unique
  password  String
  firstName String?
  lastName  String?
  phone     String?
  address   String?
  age       Int?
  avatarUrl Image?
  reviews   ProductReview[]
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  visits    Visit[]
  orders    Order[]
  cart      Cart?
}

model Visit {
  id        Int      @id @default(autoincrement())
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  userAgent Json?
  referrer  String?
  createdAt DateTime @default(now())
}

model Product {
  id           Int               @id @default(autoincrement())
  name         String
  description  String?
  price        Float
  imageUrl     String?
  images       Image[]           @relation("ProductImages")
  rating       Float?            @default(0)
  categories   ProductCategory[] @relation("ProductCategories")
  stock        Int               @default(0)
  reviews      ProductReview[]
  orders       Order[]           @relation("OrderProducts")
  carts        Cart[]            @relation("CartProducts")
  productLists ProductList[]     @relation("ProductListProducts")
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
}

model ProductCategory {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  imageId     Int?
  image       Image?
  products    Product[] @relation("ProductCategories")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model ProductReview {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String?
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id         Int              @id @default(autoincrement())
  url        String
  altText    String?
  product    Product[]        @relation("ProductImages")
  categoryId Int?             @unique
  category   ProductCategory? @relation(fields: [categoryId], references: [id])
  userId     Int?             @unique
  user       User?            @relation(fields: [userId], references: [id])
  gallerylId  Int?             @unique
  gallery    ImageGallery?   @relation(fields: [gallerylId], references: [id])
  createdAt  DateTime         @default(now())
}

model ImageGallery {
  id        Int      @id @default(autoincrement())
  images    Image[]
  altText   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id        Int       @id @default(autoincrement())
  userId    Int?
  user      User?     @relation(fields: [userId], references: [id])
  products  Product[] @relation("OrderProducts")
  total     Float
  status    String    @default("pending")
  createdAt DateTime  @default(now())
}

model Cart {
  id        Int       @id @default(autoincrement())
  userId    Int       @unique
  user      User      @relation(fields: [userId], references: [id])
  products  Product[] @relation("CartProducts")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model ProductList {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  products    Product[] @relation("ProductListProducts")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}


