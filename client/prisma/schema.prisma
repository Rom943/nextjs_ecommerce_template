// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String?
  lastName  String?
  phone     String?
  address   String?
  age       Int?
  avatarId  Int?
  avatar    Image?   @relation("AdminAvatar", fields: [avatarId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
}

model User {
  id        Int             @id @default(autoincrement())
  email     String          @unique
  password  String
  firstName String?
  lastName  String?
  phone     String?
  address   String?
  age       Int?
  avatarId  Int?
  avatar    Image?          @relation("UserAvatar", fields: [avatarId], references: [id])
  reviews   ProductReview[]
  visits    Visit[]
  orders    Order[]
  cart      Cart?
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

model Visit {
  id        Int      @id @default(autoincrement())
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  userAgent Json?
  referrer  String?
  createdAt DateTime @default(now())
}

model Product {
  id             Int               @id @default(autoincrement())
  name           String
  description    String?
  price          Float
  discount       Float?            @default(0)
  mainImageId    Int?
  mainImage      Image?            @relation("ProductMainImage", fields: [mainImageId], references: [id])
  productGallery ImageGallery[]    @relation("ProductGallery")
  rating         Float?            @default(0)
  categories     ProductCategory[] @relation("ProductCategories")
  stock          Int               @default(0)
  reviews        ProductReview[]
  orders         Order[]           @relation("OrderProducts")
  carts          Cart[]            @relation("CartProducts")
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
}

model ProductCategory {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  mainImageId Int?
  mainImage   Image?    @relation("ProductCategoryImage", fields: [mainImageId], references: [id])
  products    Product[] @relation("ProductCategories")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model ProductReview {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String?
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id               Int               @id @default(autoincrement())
  url              String
  altText          String?
  width            Int?
  height           Int?
  imageGallery     ImageGallery[]    @relation("ImageGalleryImages")
  productCategory  ProductCategory[] @relation("ProductCategoryImage")
  adminAvatar      Admin[]           @relation("AdminAvatar")
  userAvatar       User[]            @relation("UserAvatar")
  productMainImage Product[]         @relation("ProductMainImage")
  postMainImage    Post[]            @relation("PostMainImage")
}

model ImageGallery {
  id             Int       @id @default(autoincrement())
  images         Image[]   @relation("ImageGalleryImages")
  altText        String?
  productGallery Product[] @relation("ProductGallery")
  postImages     Post[]    @relation("PostImages")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Order {
  id              Int       @id @default(autoincrement())
  userId          Int?
  user            User?     @relation(fields: [userId], references: [id])
  products        Product[] @relation("OrderProducts")
  total           Float
  shippingAddress String?
  billingAddress  String?
  paymentMethod   String?
  paymentStatus   String    @default("unpaid")
  shippingStatus  String    @default("pending")
  trackingNumber  String?
  shippingCost    Float?
  status          String    @default("pending")
  createdAt       DateTime  @default(now())
}

model Cart {
  id        Int       @id @default(autoincrement())
  userId    Int       @unique
  user      User      @relation(fields: [userId], references: [id])
  products  Product[] @relation("CartProducts")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Post {
  id          Int            @id @default(autoincrement())
  title       String
  content     String?
  mainImageId Int?
  mainImage   Image?         @relation("PostMainImage", fields: [mainImageId], references: [id])
  postImages  ImageGallery[] @relation("PostImages")
  authorId    Int?
  author      Admin?         @relation(fields: [authorId], references: [id])
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model Template {
  id        Int       @id @default(autoincrement())
  name      String
  layout    Templates
  content   Json?
  styles    Json?
  published Boolean   @default(false)
  websiteId Int?
  website   Website?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Website {
  id         Int      @id @default(autoincrement())
  name       String
  domain     String   @unique
  templateId Int      @unique
  template   Template @relation(fields: [templateId], references: [id])
  
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Templates {
  SPORTS
  FASHION
  TECHNOLOGY
  FOOD
  TRAVEL
  HEALTH
  EDUCATION
  ENTERTAINMENT
  BUSINESS
  LIFESTYLE
  FINANCE
  REAL_ESTATE
  AUTOMOTIVE
  BEAUTY
  FITNESS
  GAMING
  MUSIC
  ART
  PHOTOGRAPHY
}
