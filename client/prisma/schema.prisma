// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String?
  lastName  String?
  phone     String?
  address   String?
  age       Int?
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
}

model User {
  id        Int             @id @default(autoincrement())
  email     String          @unique
  password  String
  firstName String?
  lastName  String?
  phone     String?
  address   String?
  age       Int?
  avatarUrl String?
  reviews   ProductReview[]
  visits    Visit[]
  orders    Order[]
  cart      Cart?
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  imageId   Int?
}

model Visit {
  id        Int      @id @default(autoincrement())
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  userAgent Json?
  referrer  String?
  createdAt DateTime @default(now())
}

model Product {
  id                 Int               @id @default(autoincrement())
  name               String
  description        String?
  price              Float
  discount           Float?            @default(0)
  mainImageUrl       String?
  productGalleryUrls Json?
  rating             Float?            @default(0)
  categories         ProductCategory[] @relation("ProductCategories")
  stock              Int               @default(0)
  productAttributes  Json?
  reviews            ProductReview[]
  orders             Order[]           @relation("OrderProducts")
  carts              Cart[]            @relation("CartProducts")
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
}

model ProductCategory {
  id                Int       @id @default(autoincrement())
  name              String    @unique
  subCategories     Json?
  description       String?
  thumbnailImageUrl String?
  HeroImageUrl      String?
  products          Product[] @relation("ProductCategories")
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model ProductReview {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String?
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  altText   String?
  width     Int?
  height    Int?
  createdAt DateTime @default(now())
}

model Video {
  id        Int      @id @default(autoincrement())
  url       String
  title     String?
  description String?
  thumbnailUrl String?
  duration  Int?     // Duration in seconds
  createdAt DateTime @default(now())
}

model Order {
  id                   Int       @id @default(autoincrement())
  userId               Int?
  user                 User?     @relation(fields: [userId], references: [id])
  products             Product[] @relation("OrderProducts")
  productsOrderDetails Json?
  total                Float
  paymentStatus        String    @default("unpaid")
  shippingStatus       String    @default("pending")
  trackingNumber       String?
  shippingCost         Float     @default(0)
  status               String    @default("pending")
  createdAt            DateTime  @default(now())
}

model Cart {
  id        Int       @id @default(autoincrement())
  userId    Int       @unique
  user      User      @relation(fields: [userId], references: [id])
  products  Product[] @relation("CartProducts")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Post {
  id          Int            @id @default(autoincrement())
  title       String
  content     String?
  mainImageId Int?
  authorId    Int?
  author      Admin?         @relation(fields: [authorId], references: [id])
  categories  PostCategory[] @relation("PostCategories")
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model PostCategory {
  id                Int      @id @default(autoincrement())
  name              String   @unique
  description       String?
  thumbnailImageUrl String?
  HeroImageUrl      String?
  subCategories     Json?
  posts             Post[]   @relation("PostCategories")
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Website {
  id          Int       @id @default(autoincrement())
  name        String
  domain      String    @unique
  template    Templates
  content     Json?
  styles      Json?
  logoUrl     String?
  faviconUrl  String?
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Templates {
  SPORTS
  FASHION
  TECHNOLOGY
  FOOD
  TRAVEL
  HEALTH
  EDUCATION
  ENTERTAINMENT
  BUSINESS
  LIFESTYLE
  FINANCE
  REAL_ESTATE
  AUTOMOTIVE
  BEAUTY
  FITNESS
  GAMING
  MUSIC
  ART
  PHOTOGRAPHY
}
